
margin: 10px auto; 这一行保证了页面在任何分辨率下，都会居中。

min-width:780px; max-width:1260px; 这第二行规定了页面的最小和最大宽度。注意，IE6不支持这二行，即它们在IE6中是无效的。

width:expression(document.body.clientWidth < 782? "780px" : document.body.clientWidth > 1262? "1260px" : "auto");
这一行是针对IE6的解决方法。它采用了陈思思、表达式，也可以通过javascript实现。

另外，如果想让内层的各个区块也自动的伸缩，它们的宽度可以采用百分比的形式，比如：

#div-left{

width:50%;

}

#div-right{

width:50%;

}

/* 打印样式 */
@media print {
color: red;
}
/* 手机等小屏幕手持设备 */
@media screen and (min-width: 320px) and (max-width: 480px) {

}

/* 平板之类的宽度 1024 以下设备 */
@media only screen and (min-width: 321px) and (max-width: 1024px) {

}

/* PC客户端或大屏幕设备: 1028px 至更大 */
@media only screen and (min-width: 1029px) {

}

/* 竖屏 */
@media screen and (orientation:portrait) and (max-width: 720px) {

}

/* 横屏 */
@media screen and (orientation:landscape){

}
/* 手机等小屏幕手持设备 */
@media screen and (min-width: 320px) and (max-width: 480px) {
body {
background: yellow;
}
}

/* 平板之类的宽度 1024 以下设备 */
@media only screen and (min-width: 321px) and (max-width: 1024px) {
body {
background: blue;
}
}

/* PC客户端或大屏幕设备: 1028px 至更大 */
@media only screen and (min-width: 1029px) {
body {
background: green;
}
}

/* 竖屏 */
@media screen and (orientation:portrait) and (max-width: 720px) {对应样式}

/* 横屏 */
@media screen and (orientation:landscape){对应样式}
