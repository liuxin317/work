Python语言与Perl，C和Java等语言有许多相似之处。但是，也存在一些差异。

第一个Python程序

交互式编程

交互式编程不需要创建脚本文件，是通过Python解释器的交互模式进来编写代码。


#Python 标识符

在Python里，标识符由字母、数字、下划线组成。

在Python中，所有标识符可以包括英文、数字以及下划线（_），但不能以数字开头。

Python 中标志符是区分大小写的。

以下划线开头的标志符是有特殊意义的。以单下划线开头_foo的代表不能直接访问的类属性，需要通过类提供的接口进行访问，不能用from xxx import * 而导入；

以双下划线开头的__foo代表类的私有成员；以双下划线开头和结尾的__foo__代表Python里特殊方法专用的标识，如__init__()代表类的构造函数。

Python 可以同一行显示多条语句，方法是用分号;分开，如:

print 'hello'; print 'runoob';


#Python 保留字符

下面的列表显示了在Python中保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。
所有Python的关键字只包含小写字母。

and assert

break

class continue

def del

elif else except exec 

finally for from 

global 

if import in is

lambda

not

or

pass print

raise return

try

while

with

yield


#行和缩进

学习Python与其他语言最大的区别就是，Python的代码块不使用大括号来控制类，函数以及其他逻辑判断。Python最具特色的就是用缩进来写模块。

缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行，如下所示：

if True
    print "True"
else:
    print "False"

indentationError: unexpected indent错误是Python编译器是在告诉你你的文件里格式不正确，可能是tab和空格没对齐的问题。所有Python对格式要求非常严格。

如果是indentationError: unindent does not match any outer indentation level错误表明，你使用的缩进方式不一致，有的是tab键缩进，有的是空格缩进，改为一致即可。

因此，在Python的代码块中必须使用先攻数目的行首缩进空格数。

建议你在每个缩进层次使用单个制表符或两个空格或四个空格，切记不能混用


#多行语句

Python语句中一般以新行作为语句额结束符。

但是我们可以使用斜杠（\）将一行的语句分为多行显示，如下所示：

total = item_one + \
        item_two + \
        item_three
语句中包含[],{}或()括号就不需要使用多行链接符。如下实例：

days = ['monday','2','3',
        '4', '5']


#Python 引号

Python可以使用引号(')、双引号（“）、三引号（‘’‘或”“”）来表示字符串，引导的开始与结束必须的相同类型的。
其中三引号可以有多行组成，编写多行文本的快捷语法，常用于文档字符串，在文件的特定地点，被当做注释。

word = 'word'
sentence = ”这是一个句子“
paragraph = """这是一个段落。
包含了多个语句"""


#Python 注释

Python中单行注释采用#开头。

#!/usr/bin/python
# -*- coding: UTF-8 -*-
# 文件名: test.py

# 第一个注释
print "Hello,Python!"; #第二个注释

注释可以在语句或表达式行末：
name = "madisetti" # 这是一个注释

python 中多行注释使用三个单引号（'''）或三个双引号(""")。


#python 空行

函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。类和函数入口之间也用一行空行分隔，以突出函数入口的开始。

空行与代码缩进不同，空行并不是Python语法的一部分，书写时不插入空行，Python解释器运行也不会出错。但是空行的作用在于分隔两段不同功能或含义的代码，使于日后代码的维护或重构。

记住：空行也是程序代码的一部分。


#等待用户输入
下面的程序执行后就会等待用户输入，按回车键后就会退出：

#!/usr/bin/python 

raw_input("\n\nPress the enter key to exit.")

以上代码中，“\n\n”在结果输出前会输出两个新的空行。一旦用户按下enter键退出，其他键显示。


#同一行显示多条语句
python 可以在同一行中使用多条语句，语句之间使用分号（；）分隔，一下是一个简单的实例

#!/usr/bin/python

import sys; x = 'runoob'; sys.stdout.write(x + '\n')

执行以上代码，输入结果为：

$ python test.py
runoob


#Print 输出

print 默认输出是换行的。如果要实现不换行需要在变量末尾加上逗号，

#!/usr/bin/python
# -*- coding: UTF-8 -*-

x='a'
y='b'
# 换行输出
print x
print y 

print '-------'
#不换行输出
print x,
print y,

#不换行输出
print x,y

以上实例执行结果为：

a 
b 
-------
a b a b

